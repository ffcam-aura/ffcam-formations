#!/bin/bash

# Script de d√©ploiement vers Vercel
# Usage: ./scripts/deploy.sh

set -e

echo "üöÄ D√©marrage du d√©ploiement vers Vercel..."

# V√©rifier que nous sommes sur la branche main
CURRENT_BRANCH=$(git branch --show-current)
if [ "$CURRENT_BRANCH" != "main" ]; then
    echo "‚ö†Ô∏è  Attention: Vous n'√™tes pas sur la branche main (actuellement sur: $CURRENT_BRANCH)"
    read -p "Voulez-vous continuer ? (y/n) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "‚ùå D√©ploiement annul√©"
        exit 1
    fi
fi

# V√©rifier s'il y a des changements non commit√©s
if ! git diff-index --quiet HEAD --; then
    echo "‚ö†Ô∏è  Des changements non commit√©s ont √©t√© d√©tect√©s"
    git status --short
    read -p "Voulez-vous continuer sans ces changements ? (y/n) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "‚ùå D√©ploiement annul√©"
        exit 1
    fi
fi

# V√©rifier que le remote vercel existe
if ! git remote | grep -q "^vercel$"; then
    echo "‚ùå Le remote 'vercel' n'existe pas"
    echo "üí° Pour l'ajouter: git remote add vercel <URL_DU_REPO_VERCEL>"
    exit 1
fi

# Synchroniser avec le remote principal d'abord (optionnel)
echo "üì• R√©cup√©ration des derni√®res modifications du repo principal..."
git fetch origin

# V√©rifier si nous sommes √† jour avec origin/main
LOCAL=$(git rev-parse @)
REMOTE=$(git rev-parse origin/main)
if [ $LOCAL != $REMOTE ]; then
    echo "‚ö†Ô∏è  Votre branche locale n'est pas √† jour avec origin/main"
    read -p "Voulez-vous pull les derniers changements ? (y/n) " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        git pull origin main
    fi
fi

# Pousser vers Vercel
echo "üîÑ Push vers Vercel..."
git push vercel main

echo "‚úÖ D√©ploiement lanc√© avec succ√®s!"
echo "üìä Vous pouvez suivre le d√©ploiement sur: https://vercel.com/dashboard"